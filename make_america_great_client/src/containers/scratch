to do:

reset form, don't show drop down of previous guesses

total the number of right and wrong in guesses component

change checkGuess function to be a reducer/action thing

add loading logo

make it so that the temp reading shows as a hint, not default and then change the howitworks component


------->>>

deploy with heroku eventually








//for app.js file:

// something like this needs to happen to reduxify this. i think this will replace what i currently have in render.
//handleOnClick() {
//     this.props.store.dispatch({
//       type: 'INCREASE_COUNT',
//     });
//   }
 
//   render() {
//     return (
//       <div className="App">
//         <button onClick={(event) => this.handleOnClick(event)} >
//           Click 
//         </button>
//         <p>{this.props.store.getState().scorerecords.length}</p>
//       </div>
//     );
//   }
// };

// const mapStateToProps = (state) => { 
//   return { guesses: state.guesses };
// };

// export default connect(mapStateToProps)(App);


//create the store in index.js. you will also create a scorerecords reducer and a scorerecords action files as well.

//also implement combine reducers - don't need multiple reducers for this to work, its ok if you just have the one scorerecords reducer.

//old guesses component:
const Guesses = (props) => (
	<div className="Guesses Container">
		<h1> Guesses </h1>
	{props.guesses.map((guess, i) =>
		<div className="GuessCard" key={i} >
			<p> {guess.date} </p>
			<p> {guess.guess} </p>
		</div>
		)}
	</div>
)

export default Guesses;

from index.js:
// provider makes the store available to all container components
// theres a single store that contains a state
// reducers are functions that are current state + action which leads to the new state
// reducers are always called by the store
// store does a dispatch which takes in an action, which calls the appropriate reducer which creates new state from the old

